<jsp:root xmlns:ol="http://www.openlegacy.org/tags"
	xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:fn="http://java.sun.com/jsp/jstl/functions"
	xmlns:spring="http://www.springframework.org/tags"
	xmlns:form="http://www.springframework.org/tags/form"
	xmlns:jsp="http://java.sun.com/JSP/Page" version="2.0">
	<jsp:output omit-xml-declaration="yes" />
	<jsp:directive.attribute name="name" type="java.lang.String"
		required="true" rtexprvalue="true"
		description="The entity field to bind the tag to" />
	<jsp:directive.attribute name="label" type="java.lang.String"
		required="false" rtexprvalue="true"
		description="The label for this tag. Default to field display name" />
	<jsp:directive.attribute name="size" type="java.lang.Integer"
		required="false" rtexprvalue="true"
		description="The size of this tag. Default to field length" />
	<jsp:directive.attribute name="type" type="java.lang.String"
		required="false" rtexprvalue="true"
		description="Set field type (default 'text', or 'password')" />
	<jsp:directive.attribute name="style" type="java.lang.String"
		required="false" rtexprvalue="true" description="Set field style" />
	<jsp:directive.attribute name="cssClass" type="java.lang.String"
		required="false" rtexprvalue="true" description="Set field CSS class" />
	<jsp:directive.attribute name="top" type="java.lang.String"
		required="false" rtexprvalue="true"
		description="Set field top position" />
	<jsp:directive.attribute name="left" type="java.lang.String"
		required="false" rtexprvalue="true"
		description="Set field left position" />
	<c:choose>
		<c:when test="${fn:contains(name,'.')}">
			<c:set var="fieldNameParts" value="${fn:split(name,'.')}" />
			<c:set var="fieldPart"
				value="${definitions.partsDefinitions[fieldNameParts[0]]}" />
			<c:set var="fieldDefinition"
				value="${fieldPart.fieldsDefinitions[name]}" />
		</c:when>
		<c:otherwise>
			<c:set var="fieldDefinition"
				value="${definitions.fieldsDefinitions[name]}" />
		</c:otherwise>
	</c:choose>
	<c:if test="${empty label}">
		<c:set var="label" value="${fieldDefinition.displayName}" />
	</c:if>
	<c:if test="${empty size}">
		<c:set var="size" value="${fieldDefinition.length}" />
	</c:if>
	<c:if test="${empty type}">
		<c:set var="type"
			value="${fieldDefinition.fieldTypeDefinition.typeName}" />
	</c:if>
	<c:if test="${not empty top}">
		<c:set var="style"
			value="${style};position:absolute;top:${top};left:${left}" />
	</c:if>
	<div class="field_row">
		<c:if test="${not empty label}">
		<div class="label">
			<label>${label}:</label>
		</div>
		</c:if>
		<div class="field">
			<c:choose>
				<c:when test="${fieldDefinition.editable}">
					<c:choose>
						<c:when test="${type == 'number'}">
							<script>require("dijit/form/NumberSpinner");</script>
							<span class="fieldPlaceholder" />
							<form:input type="${type}" id="${name}"
								data-dojo-type="dijit.form.NumberSpinner" dir="ltr"
								constraints="{min:${fieldDefinition.fieldTypeDefinition.minimumValue},max:${fieldDefinition.fieldTypeDefinition.maximumValue},places:0}"
								path="${name}" cssStyle="${style}" cssClass="${cssClass}" />
						</c:when>
						<c:when test="${type == 'boolean'}">
							<script>require("dijit/form/CheckBox");</script>
							<span class="fieldPlaceholder" />
							<form:checkbox name="${name}"
								data-dojo-type="dijit.form.CheckBox" path="${name}"
								cssStyle="${style}" cssClass="${cssClass}" />
						</c:when>
						<c:when test="${type == 'date'}">
							<form:input id="${name}" path="${name}" cssStyle="${style}"
								cssClass="${cssClass}" />
							<script type="text/javascript">
								require(["dijit/form/DateTextBox", "dojo/dom"], 
										function(DateTextBox, dom){
											var dateField = new DateTextBox({ 
													name : "${name}", 
													value : dom.byId('${name}').value, 
													datePattern : "yyyy-MM-dd" }, 
												"${name}");
								});
							</script>
						</c:when>
						<c:when test="${type == 'autocomplete'}">
							<script language="JavaScript" type="text/javascript">
							require(["dojo/data/ItemFileReadStore",
									"dijit/form/FilteringSelect"]);
						</script>
							<span data-dojo-type="dojo.data.ItemFileReadStore"
								data-dojo-props="url:'${pageContext.request.contextPath}/${definitions.entityClassName}/${fieldDefinition.name}'"
								data-dojo-id="${fieldDefinition.name}Values"></span>
							<input name="${fieldDefinition.name}"
								data-dojo-type="dijit.form.FilteringSelect"
								data-dojo-props="store:${fieldDefinition.name}Values, searchAttr:'name', pageSize:100"
								style="width: 200px"></input>
						</c:when>
						<c:when test="${type == 'address'}">
							<script type="text/javascript"
								src="http://maps.google.com/maps/api/js?sensor=false"><!----></script>
							<form:input type="text" id="${name}" size="${size}"
								maxlength="${size}" path="${name}" cssStyle="${style}"
								cssClass="${cssClass}" />
							<a href="javascript:require(['dojo/dom'], function(dom){createMap(dom.byId('${name}').value)});showDialog('mapDialog')">
								<img src="${pageContext.request.contextPath}/icons/map.png" width="26" height="28" alt="Map" style="vertical-align: top;"/>
							</a>
						</c:when>
						<c:when test="${type == 'password'}">
							<form:input type="password" id="${name}" size="${size}"
								maxlength="${size}" path="${name}" cssStyle="${style}"
								cssClass="${cssClass}" />
						</c:when>
						<c:when test="${type == 'enum'}">
							<script>require("dijit/form/FilteringSelect");</script>
							<span class="fieldPlaceholder" />
							<form:select id="${name}"
								data-dojo-type="dijit.form.FilteringSelect" path="${name}" cssStyle="${style}" cssClass="${cssClass}">
								<form:option value="" label="--- Select ---"/>
								<form:options items="${fieldDefinition.fieldTypeDefinition.displayValues}" />
							</form:select>
						</c:when>
						<c:otherwise>
							<form:input type="text" id="${name}" size="${size}"
								maxlength="${size}" path="${name}" cssStyle="${style}"
								cssClass="${cssClass}" />
						</c:otherwise>
					</c:choose>
				</c:when>
				<c:otherwise>
					<ol:span cssClass="readonlyField ${cssClass}" path="${name}"
						cssStyle="${style}" />
				</c:otherwise>
			</c:choose>
		</div>
	</div>
</jsp:root>